
‚úÖ jurisdictions ‚Äî Expanded
sql
Copy
Edit
CREATE TABLE jurisdictions (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  region VARCHAR(255),
  iso_code CHAR(2),
  currency_code CHAR(3),
  is_fatf_member BOOLEAN DEFAULT FALSE,
  risk_level VARCHAR(50), -- Low, Medium, High
  favorability_score INT CHECK (favorability_score BETWEEN 0 AND 100),
  legal_system_type VARCHAR(100), -- Common law, Civil law, Sharia, Hybrid
  national_language VARCHAR(100),
  central_bank_url TEXT,
  financial_licensing_portal TEXT,
  contact_email TEXT,
  notes TEXT,
  last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
üîç Usefulness:
Supports dynamic internationalization (national_language)

Adds FATF relevance for DeFi/VASP classification

Central Bank links for stablecoin oversight

‚úÖ regulatory_bodies ‚Äî Enhanced with contact & scope
sql
Copy
Edit
CREATE TABLE regulatory_bodies (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255),
  jurisdiction_id INT REFERENCES jurisdictions(id),
  website_url TEXT,
  description TEXT,
  contact_email TEXT,
  phone_number VARCHAR(50),
  crypto_scope TEXT, -- Exchange, Custody, Stablecoin, ICO, NFT, etc.
  authority_level VARCHAR(50), -- National, Regional, Subnational
  reporting_api_available BOOLEAN DEFAULT FALSE
);
üîç Usefulness:
Supports automated reporting integrations

Documents scope of crypto oversight (some bodies only cover securities)

‚úÖ laws ‚Äî Granular control, clarity, and legal classification
sql
Copy
Edit
CREATE TABLE laws (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255),
  abbreviation VARCHAR(50),
  law_type VARCHAR(100), -- AML, Tax, Custody, Licensing, DAO, Stablecoin
  jurisdiction_id INT REFERENCES jurisdictions(id),
  regulatory_body_id INT REFERENCES regulatory_bodies(id),
  effective_date DATE,
  last_updated DATE,
  legal_category VARCHAR(100), -- Act, Directive, Guideline, Decree
  description TEXT,
  applicability TEXT, -- Who this applies to: exchanges, DAOs, custodians, brokers
  full_text_link TEXT,
  source_url TEXT,
  source_language VARCHAR(100)
);
‚úÖ obligations ‚Äî Added escalation, dependencies, thresholds
sql
Copy
Edit
CREATE TABLE obligations (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255),
  description TEXT,
  law_id INT REFERENCES laws(id),
  jurisdiction_id INT REFERENCES jurisdictions(id),
  obligation_type VARCHAR(100), -- SAR, Licensing, Tax Filing
  frequency VARCHAR(100), -- Real-time, Weekly, Quarterly, Annually
  due_by_day INT,
  due_months TEXT, -- e.g. '1,4,7,10' for quarterly
  format VARCHAR(100), -- PDF, JSON, XML
  delivery_method VARCHAR(100), -- API, Upload, Paper, Email
  submission_url TEXT,
  escalation_policy TEXT, -- e.g., notify director after 7 days
  penalty_type VARCHAR(100), -- Monetary, License Revocation
  penalty_amount DECIMAL(12,2),
  threshold_condition TEXT, -- e.g., 'TX > 10k USD'
  dependent_on INT REFERENCES obligations(id), -- chains to other obligations
  is_active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
üîç Usefulness:
Enables conditional triggers and automation

Captures dependency logic (e.g., license renewal before tax submission)

‚úÖ reports ‚Äî Legal traceability and blockchain integration
sql
Copy
Edit
CREATE TABLE reports (
  id SERIAL PRIMARY KEY,
  obligation_id INT REFERENCES obligations(id),
  organization_id INT REFERENCES organizations(id),
  jurisdiction_id INT REFERENCES jurisdictions(id),
  submitted_by INT REFERENCES users(id),
  status VARCHAR(50),
  file_link TEXT,
  submission_hash TEXT, -- SHA256 for audit chain
  submission_signature TEXT,
  blockchain_anchor_tx TEXT, -- Optional: store anchor on chain
  submitted_to TEXT, -- Portal, Email, Gov API
  submission_date TIMESTAMP,
  verified_by INT REFERENCES users(id),
  verification_notes TEXT,
  response_code VARCHAR(50),
  response_message TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
‚úÖ obligation_assignments ‚Äî Collaboration + SLA tracking
sql
Copy
Edit
CREATE TABLE obligation_assignments (
  id SERIAL PRIMARY KEY,
  obligation_id INT REFERENCES obligations(id),
  user_id INT REFERENCES users(id),
  team_role VARCHAR(100), -- Preparer, Reviewer, Signer, Legal Counsel
  status VARCHAR(50),
  due_date DATE,
  actual_completion_date DATE,
  is_blocking BOOLEAN DEFAULT FALSE,
  sla_hours INT,
  priority_level VARCHAR(50),
  completion_notes TEXT
);
‚úÖ users ‚Äî Enhanced for international teams
sql
Copy
Edit
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255),
  email VARCHAR(255) UNIQUE,
  role VARCHAR(100), -- Admin, Officer, Auditor
  organization_id INT REFERENCES organizations(id),
  language_preference VARCHAR(50),
  timezone VARCHAR(100),
  contact_number VARCHAR(50),
  is_active BOOLEAN DEFAULT TRUE,
  last_login TIMESTAMP
);
‚úÖ organizations ‚Äî Legal footprint
sql
Copy
Edit
CREATE TABLE organizations (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255),
  incorporation_country VARCHAR(100),
  main_exchange_token VARCHAR(50),
  regulatory_classification VARCHAR(100), -- VASP, Broker-Dealer, DAO, Custodian
  onboarding_date DATE,
  website_url TEXT,
  contact_email TEXT
);
üöÄ Additional Utilities
üìå regulatory_updates
Tracks breaking changes to laws or frameworks (parsed by AI or legal team).

sql
Copy
Edit
CREATE TABLE regulatory_updates (
  id SERIAL PRIMARY KEY,
  jurisdiction_id INT REFERENCES jurisdictions(id),
  update_title TEXT,
  update_summary TEXT,
  affected_law_id INT REFERENCES laws(id),
  update_type VARCHAR(100), -- Threshold, Penalty, Filing Frequency
  change_details TEXT,
  effective_date DATE,
  source_url TEXT,
  triggered_ai_review BOOLEAN DEFAULT FALSE
);
üìé regulatory_keywords_index
Used by AI Copilot to power natural-language search across laws.

sql
Copy
Edit
CREATE TABLE regulatory_keywords_index (
  id SERIAL PRIMARY KEY,
  keyword TEXT,
  law_id INT REFERENCES laws(id),
  jurisdiction_id INT REFERENCES jurisdictions(id),
  match_score DECIMAL(5,2)
);
üß† Bonus: Smart Indexes for Intelligence Layer
idx_jurisdiction_risk_favorability

idx_obligations_due_by_priority

idx_laws_by_type_and_category

fts_law_description_idx (PostgreSQL Full Text Search)

gin_keywords_idx on regulatory_keywords_index(keyword)

